import{_ as i,c as a,a2 as t,o as e}from"./chunks/framework.CQ46jkEd.js";const c=JSON.parse('{"title":"FileStorageClient","description":"","frontmatter":{},"headers":[],"relativePath":"file-storage-client.md","filePath":"file-storage-client.md"}'),n={name:"file-storage-client.md"};function l(h,s,p,k,r,o){return e(),a("div",null,s[0]||(s[0]=[t(`<h1 id="filestorageclient" tabindex="-1">FileStorageClient <a class="header-anchor" href="#filestorageclient" aria-label="Permalink to &quot;FileStorageClient&quot;">â€‹</a></h1><p>Typescript class that receives an <code>AppClient</code> and exposes functions to upload and retrieve full files.</p><p>This class is really important in this module, as it includes the process of chunking and aggregation of the chunks necessary to store and retrieve files in holochain.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { EntryHash } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@holochain/client&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { FileStorageClient } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;@darksoil-studio/file-storage-zome&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> client</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> FileStorageClient</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(appClient, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;my-role-name&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> fileHash</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> EntryHash</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> client.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">uploadFile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(file);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> client.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">downloadFile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(fileHash)); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Will print the file</span></span></code></pre></div><div class="note custom-block github-alert"><p class="custom-block-title">NOTE</p><p>Learn how to setup the <code>AppClient</code> object <a href="https://www.npmjs.com/package/@holochain/client" target="_blank" rel="noreferrer">here</a>.</p></div>`,5)]))}const g=i(n,[["render",l]]);export{c as __pageData,g as default};
